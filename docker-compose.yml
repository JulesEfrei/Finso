services:
  # Frontend service
  app:
    container_name: front-end
    build:
      context: ./front-end
      dockerfile: Dockerfile
      target: release
      args:
        - VITE_BASE_URL=${VITE_BASE_URL}
    ports:
      - "8080:80"
    networks:
      - app_network
    depends_on:
      - db
      - api

  # Backend API service
  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
      target: release
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy
        restart: true
    networks:
      - app_network
    env_file:
      - .env

  # PostgreSQL database service
  db:
    container_name: db
    image: postgres:12.20-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

volumes:
  postgres_data:

# Networks for service communication
networks:
  app_network:
